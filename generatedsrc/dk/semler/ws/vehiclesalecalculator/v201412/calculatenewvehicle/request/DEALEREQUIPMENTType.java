//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.11 at 12:09:26 PM PKT 
//


package dk.semler.ws.vehiclesalecalculator.v201412.calculatenewvehicle.request;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				This is a specification of importer defined dealer equipment and dealer equipment.		
 * 			
 * 
 * <p>Java class for DEALEREQUIPMENTType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DEALEREQUIPMENTType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="SALESPRICEEXCLUDINGVAT"&gt;
 *           &lt;simpleType&gt;
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal"&gt;
 *               &lt;totalDigits value="11"/&gt;
 *               &lt;fractionDigits value="2"/&gt;
 *             &lt;/restriction&gt;
 *           &lt;/simpleType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="SALESPRICEINCLUDINGVAT" minOccurs="0"&gt;
 *           &lt;simpleType&gt;
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal"&gt;
 *               &lt;totalDigits value="11"/&gt;
 *               &lt;fractionDigits value="2"/&gt;
 *             &lt;/restriction&gt;
 *           &lt;/simpleType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="LISTPRICEEXCLUDINGVAT" minOccurs="0"&gt;
 *           &lt;simpleType&gt;
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal"&gt;
 *               &lt;totalDigits value="11"/&gt;
 *               &lt;fractionDigits value="2"/&gt;
 *             &lt;/restriction&gt;
 *           &lt;/simpleType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="IMPORTERDEFINED" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DEALEREQUIPMENTType", propOrder = {
    "salespriceexcludingvat",
    "salespriceincludingvat",
    "listpriceexcludingvat",
    "importerdefined"
})
public class DEALEREQUIPMENTType {

    @XmlElement(name = "SALESPRICEEXCLUDINGVAT", required = true)
    protected BigDecimal salespriceexcludingvat;
    @XmlElement(name = "SALESPRICEINCLUDINGVAT")
    protected BigDecimal salespriceincludingvat;
    @XmlElement(name = "LISTPRICEEXCLUDINGVAT")
    protected BigDecimal listpriceexcludingvat;
    @XmlElement(name = "IMPORTERDEFINED")
    protected boolean importerdefined;

    /**
     * Gets the value of the salespriceexcludingvat property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getSALESPRICEEXCLUDINGVAT() {
        return salespriceexcludingvat;
    }

    /**
     * Sets the value of the salespriceexcludingvat property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSALESPRICEEXCLUDINGVAT(BigDecimal value) {
        this.salespriceexcludingvat = value;
    }

    /**
     * Gets the value of the salespriceincludingvat property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getSALESPRICEINCLUDINGVAT() {
        return salespriceincludingvat;
    }

    /**
     * Sets the value of the salespriceincludingvat property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSALESPRICEINCLUDINGVAT(BigDecimal value) {
        this.salespriceincludingvat = value;
    }

    /**
     * Gets the value of the listpriceexcludingvat property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getLISTPRICEEXCLUDINGVAT() {
        return listpriceexcludingvat;
    }

    /**
     * Sets the value of the listpriceexcludingvat property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLISTPRICEEXCLUDINGVAT(BigDecimal value) {
        this.listpriceexcludingvat = value;
    }

    /**
     * Gets the value of the importerdefined property.
     * 
     */
    public boolean isIMPORTERDEFINED() {
        return importerdefined;
    }

    /**
     * Sets the value of the importerdefined property.
     * 
     */
    public void setIMPORTERDEFINED(boolean value) {
        this.importerdefined = value;
    }

    public DEALEREQUIPMENTType withSALESPRICEEXCLUDINGVAT(BigDecimal value) {
        setSALESPRICEEXCLUDINGVAT(value);
        return this;
    }

    public DEALEREQUIPMENTType withSALESPRICEINCLUDINGVAT(BigDecimal value) {
        setSALESPRICEINCLUDINGVAT(value);
        return this;
    }

    public DEALEREQUIPMENTType withLISTPRICEEXCLUDINGVAT(BigDecimal value) {
        setLISTPRICEEXCLUDINGVAT(value);
        return this;
    }

    public DEALEREQUIPMENTType withIMPORTERDEFINED(boolean value) {
        setIMPORTERDEFINED(value);
        return this;
    }

}
